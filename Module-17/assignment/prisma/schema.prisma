// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model users {
  id        BigInt      @id @default(autoincrement()) @db.UnsignedBigInt
  firstName String      @db.VarChar(50)
  lastName  String      @db.VarChar(50)
  email     String      @unique @db.VarChar(50)
  mobile    String      @db.VarChar(50)
  password  String      @db.VarChar(50)
  otp       String      @db.VarChar(50)
  createdAt DateTime    @default(now()) @db.Timestamp(0)
  updatedAt DateTime    @default(now()) @db.Timestamp(0) @updatedAt

  categories categories[]
  customers   customers[]
  products   products[]
  invoices   invoices[]
  invoice_products invoice_products[]
}

model categories {
  id        BigInt      @id @default(autoincrement()) @db.UnsignedBigInt
  name      String      @db.VarChar(50)
  user_id   BigInt      @db.UnsignedBigInt
  createdAt DateTime    @default(now()) @db.Timestamp(0)
  updatedAt DateTime    @default(now()) @db.Timestamp(0) @updatedAt

  products products[]
  
  users users @relation(fields: [user_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
}

model customers {
  id        BigInt      @id @default(autoincrement()) @db.UnsignedBigInt
  name      String      @db.VarChar(50)
  email     String      @db.VarChar(50)
  mobile    String      @db.VarChar(50)
  user_id   BigInt      @db.UnsignedBigInt
  createdAt DateTime    @default(now()) @db.Timestamp(0)
  updatedAt DateTime    @default(now()) @db.Timestamp(0) @updatedAt

  invoices invoices[]

  users users @relation(fields: [user_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
}

model products {
  id          BigInt      @id @default(autoincrement()) @db.UnsignedBigInt
  user_id     BigInt      @db.UnsignedBigInt
  category_id BigInt      @db.UnsignedBigInt
  name        String      @db.VarChar(50)
  price       String      @db.VarChar(50)
  unit        String      @db.VarChar(50)
  img_url     String      @db.VarChar(100)
  createdAt   DateTime    @default(now()) @db.Timestamp(0)
  updatedAt   DateTime    @default(now()) @db.Timestamp(0) @updatedAt

  invoice_products invoice_products?

  users users @relation(fields: [user_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
  categories categories @relation(fields: [category_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
}

model invoices {
  id          BigInt      @id @default(autoincrement()) @db.UnsignedBigInt
  total       String      @db.VarChar(50)
  discount    String      @db.VarChar(50)
  vat         String      @db.VarChar(50)
  payable     String      @db.VarChar(50)
  user_id     BigInt      @db.UnsignedBigInt
  customer_id BigInt      @db.UnsignedBigInt
  createdAt   DateTime    @default(now()) @db.Timestamp(0)
  updatedAt   DateTime    @default(now()) @db.Timestamp(0) @updatedAt

  invoice_products invoice_products[]

  users users @relation(fields: [user_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
  customers customers @relation(fields: [customer_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
}

model invoice_products {
  id          BigInt      @id @default(autoincrement()) @db.UnsignedBigInt
  invoice_id  BigInt      @db.UnsignedBigInt
  product_id  BigInt      @db.UnsignedBigInt @unique
  user_id     BigInt      @db.UnsignedBigInt
  qty         String      @db.VarChar(50)
  sale_price  String      @db.VarChar(50)
  createdAt   DateTime    @default(now()) @db.Timestamp(0)
  updatedAt   DateTime    @default(now()) @db.Timestamp(0) @updatedAt

  users users @relation(fields: [user_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
  products products @relation(fields: [product_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
  invoices invoices @relation(fields: [invoice_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
}

model Products {
  id          BigInt      @id @default(autoincrement()) @db.UnsignedBigInt
  title       String      @db.VarChar(200)
  short_des   String      @db.VarChar(200)
  price       String      @db.VarChar(200)
  discount_price String   @db.VarChar(200)
  image       String      @db.VarChar(200)
  stock       Boolean
  star        Float
  category_id BigInt      @db.UnsignedBigInt
  brand_id    BigInt      @db.UnsignedBigInt
  createdAt   DateTime    @default(now()) @db.Timestamp(0)
  updatedAt   DateTime    @default(now()) @db.Timestamp(0) @updatedAt
}